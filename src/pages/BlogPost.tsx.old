import { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import Navbar from '../components/Navbar';
import Footer from '../components/Footer';

interface BlogPostData {
  id: number;
  name: string;
  published_on: string;
  author: string;
  main_image: string;
  post_body: string;
}

const BlogPost = () => {
  const { blogSlug } = useParams<{ blogSlug: string }>();
  const [loading, setLoading] = useState(true);
  const [post, setPost] = useState<BlogPostData | null>(null);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchBlogPost = async () => {
      try {
        setLoading(true);
        const response = await fetch(
          `${import.meta.env.VITE_SUPABASE_URL}/rest/v1/blog_posts?slug=eq.${blogSlug}&select=id,name,published_on,author,main_image,post_body`,
          {
            headers: {
              'apikey': import.meta.env.VITE_SUPABASE_ANON_KEY,
              'Content-Type': 'application/json'
            }
          }
        );

        const data = await response.json();
        
        if (data && data.length > 0) {
          setPost(data[0]);
        } else {
          setError('Blog post not found');
        }
      } catch (err) {
        console.error('Error fetching blog post:', err);
        setError('Failed to load blog post');
      } finally {
        setLoading(false);
      }
    };

    if (blogSlug) {
      fetchBlogPost();
    }
  }, [blogSlug]);

  const formatDate = (dateString: string) => {
    if (!dateString) return '';
    
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', {
      month: 'long',
      day: 'numeric',
      year: 'numeric'
    });
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-white flex items-center justify-center">
        <div className="animate-pulse text-2xl text-gray-600">Loading...</div>
      </div>
    );
  }

  if (error || !post) {
    return (
      <div className="min-h-screen bg-white flex items-center justify-center">
        <div className="text-2xl text-red-500">{error || 'Blog post not found'}</div>
      </div>
    );
  }

  return (
    <div className="relative min-h-screen overflow-x-hidden bg-white">
      <Navbar />
      
      <main className="pt-24 sm:pt-32">
        <article className="max-w-4xl mx-auto px-4 py-12">
          <header className="mb-12 text-center">
            <h1 className="text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 mb-4 font-outfit">
              {post.name}
            </h1>
            <div className="flex items-center justify-center space-x-4 text-gray-600">
              <span>{formatDate(post.published_on)}</span>
              <span>â€¢</span>
              <span>By {post.author}</span>
            </div>
          </header>

          {post.main_image && (
            <div className="mb-10">
              <img 
                src={post.main_image} 
                alt={post.name} 
                className="w-full h-auto rounded-xl shadow-lg"
              />
            </div>
          )}

          <div 
            className="prose prose-lg max-w-none"
            dangerouslySetInnerHTML={{ __html: post.post_body }}
          />
        </article>
      </main>
      
      <Footer />
    </div>
  );
};

export default BlogPost; 